name: CD(stg-deploy)

on:
  push:

jobs:
  build:
    environment: stg
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: master
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Push to ECR
        id: push-ecr
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: referral
          IMAGE_TAG: ${{ github.sha }}
          COMMIT_REF: ${{ github.sha }}
          STAGE: stg
        run: |
          docker build \
          --build-arg ENVIRONMENT=$STAGE \
          --build-arg COMMIT_REF=$COMMIT_REF \
          -t $ECR_REGISTRY/$STAGE/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$STAGE/$ECR_REPOSITORY:$IMAGE_TAG
          docker tag $ECR_REGISTRY/$STAGE/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$STAGE/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$STAGE/$ECR_REPOSITORY:latest

  deploy-ecs:
    needs: [build]
    environment: stg
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Download task definition
        if: ${{ needs.build.result == 'success' }}
        run: |
          aws ecs describe-task-definition --task-definition referral-stg --query taskDefinition > task-definition.json
